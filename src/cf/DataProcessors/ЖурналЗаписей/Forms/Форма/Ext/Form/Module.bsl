#Область ОбработсичиСобытийФормы

	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДата();
	Салон = Справочники.Салоны.ОсновнойСалон();
	
	СоздатьИзмеренияПланировщика();
	
	ОбновитьПериодОтображенияПланировщика();
	
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение_Запись" Тогда
		ЗаполнитьЖурналЗаписей();
	ИначеЕсли ИмяСобытия = "Изменение_Оплата" Тогда
		ЗаполнитьДиаграмму();
	КонецЕсли;
	
КонецПроцедуры
  #КонецОбласти        

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначенияЗаполнения = Новый Структура; 
	ЗначенияЗаполнения.Вставить("Салон", Салон); 
	ЗначенияЗаполнения.Вставить("Дата", Начало);  
	ЗначенияЗаполнения.Вставить("ДатаОкончания", Конец); 
	ЗначенияЗаполнения.Вставить("Сотрудник", ЗначенияИзмерений["Сотрудник"]);
	
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.Запись.ФормаОбъекта", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	
	ЭлементПланировщика = ВыделенныеЭлементы[0]; 
	
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение); 
	ОткрытьФорму("Документ.Запись.ФормаОбъекта", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	ЭлементПланировщика = ВыделенныеЭлементы[0]; 
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Дата", ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ДатаОкончания", ЭлементПланировщика.Конец); 
	ЗначенияРеквизитов.Вставить("Сотрудник", ЭлементПланировщика.ЗначенияИзмерений["Сотрудник"]);
	
	ОбновитьДанныеЗаписи(ЭлементПланировщика.Значение, ЗначенияРеквизитов);
	
КонецПроцедуры     

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьПериодОтображенияПланировщика();  
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры

&НаКлиенте
Процедура СалонПриИзменении(Элемент)
	
	ОбновитьПериодОтображенияПланировщика();  
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()
	
	Начало = НачалоДня(Дата) + 9 * 3600;
	Конец = НачалоДня(Дата) + 19 * 3600;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало, Конец);
	
КонецПроцедуры // ОбновитьПериодОтображенияПланировщика()() 

&НаСервере
Процедура ЗаполнитьЖурналЗаписей()
	
	Планировщик.Элементы.Очистить(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Запись.Дата КАК Дата,
	|	Запись.Салон КАК Салон,
	|	Запись.Сотрудник КАК Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(Запись.Услуга) КАК Услуга,
	|	Запись.Длительность КАК Длительность,
	|	Запись.Сумма КАК Сумма,
	|	Запись.Клиент КАК Клиент,
	|	Запись.Клиент.Телефон КАК Телефон,
	|	Запись.Комментарий КАК Комментарий,
	|	Запись.ДатаОкончания КАК ДатаОкончания,
	|	Запись.Ссылка КАК Ссылка,
	|	Запись.Цвет КАК Цвет
	|ИЗ
	|	Документ.Запись КАК Запись
	|ГДЕ
	|	Запись.Проведен
	|	И Запись.Салон = &Салон
	|	И Запись.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("Салон", Салон);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗначенияИзмерений = Новый Соответствие;
		ЗначенияИзмерений.Вставить("Сотрудник", Выборка.Сотрудник);  
		
		
		ЖирныйШрифт = Новый Шрифт(,,Истина);
		
		ПредставлениеКлиента = Строка(Выборка.Клиент) + ", " + Выборка.Телефон; 
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиента, ЖирныйШрифт));
		МассивСтрок.Добавить(Символы.ПС); 
		МассивСтрок.Добавить(Выборка.Услуга);
		МассивСтрок.Добавить(Символы.ПС);
		Если ЗначениеЗаполнено(Выборка.Комментарий) Тогда
			МассивСтрок.Добавить("-- " + Выборка.Комментарий);
		КонецЕсли;
		
		ЭлементПланировщика = Планировщик.Элементы.Добавить(Выборка.Дата, Выборка.ДатаОкончания);
		ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(ЗначенияИзмерений); 
		ЭлементПланировщика.Значение = Выборка.Ссылка;
		ЭлементПланировщика.Текст = Новый ФорматированнаяСтрока(МассивСтрок); 
		
		Цвет = Выборка.Цвет.Получить();
		Если Цвет = Неопределено Тогда
			Цвет = WebЦвета.БледноЛиловый;		
		КонецЕсли;
		ЭлементПланировщика.ЦветФона = Цвет;
	КонецЦикла;
	
	ЗаполнитьДиаграмму();
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьДиаграмму()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДеньгиОбороты.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДеньгиОбороты.СуммаПриход КАК СуммаПриход
	|ИЗ
	|	РегистрНакопления.Деньги.Обороты(&ДатаНачала, &ДатаОкончания, , Салон = &Салон) КАК ДеньгиОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	Запрос.УстановитьПараметр("Салон", Салон);

	РезультатЗапроса = Запрос.Выполнить();
	
	Диаграмма.Очистить();
	Диаграмма.Обновление = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Точка = Диаграмма.Точки.Добавить("");
	Пока Выборка.Следующий() Цикл
		Серия = Диаграмма.Серии.Добавить(Строка (Выборка.ТипДенежныхСредств));
		Диаграмма.УстановитьЗначение(Точка, Серия, Выборка.СуммаПриход);
	КонецЦикла; 
	
	Диаграмма.Обновление = Истина;
	
КонецПроцедуры // ЗаполнитьДиаграмму()

&НаСервере
Процедура СоздатьИзмеренияПланировщика()
	
	Измерение = Планировщик.Измерения.Добавить("Сотрудник");
	
	Выборка = Справочники.Сотрудники.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;		
		КонецЕсли;      
		
		ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
		ЗначениеИзмерения.Текст = Выборка.Наименование + Символы.ПС + Выборка.Должность;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.Синий;
		
	КонецЦикла;
	
КонецПроцедуры // ()

&НаСервереБезКонтекста
Процедура ОбновитьДанныеЗаписи(Запись, ЗначенияРеквизитов)
	
	ОбъектЗаписи = Запись.ПолучитьОбъект();
	
	ЕстьИзменения = Ложь;
	Для каждого Реквизит Из ЗначенияРеквизитов Цикл
		Если ОбъектЗаписи[Реквизит.Ключ] <> Реквизит.Значение Тогда
			ЕстьИзменения = Истина;
			Прервать;		
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		ЗаполнитьЗначенияСвойств(ОбъектЗаписи, ЗначенияРеквизитов); 
		ОбъектЗаписи.Длительность = (ОбъектЗаписи.ДатаОкончания - ОбъектЗаписи.Дата) / 60;
		ОбъектЗаписи.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
	
	
КонецПроцедуры // ОбновитьДанныеЗаписи()

#КонецОбласти


