#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Цвет = ТекущийОбъект.Цвет.Получить();
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокВыбораВремени();	
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
    ТекущийОбъект.Цвет = Новый ХранилищеЗначения(Цвет);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
   Оповестить("Изменение_Запись"); 
   
   ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УслугаПриИзменении(Элемент)
	
	Если Объект.Услуга.Пустая() Тогда
	    Объект.Длительность = 0;
		Объект.Сумма		= 0;
	Иначе
		ИнформацияОбУслуге 	= ПолучитьИнформациюОбУслуге(Объект.Услуга, Объект.Дата);
		Объект.Длительность = ИнформацияОбУслуге.Длительность;
		Объект.Сумма		= ИнформацияОбУслуге.Цена;
	КонецЕсли;        
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьСписокВыбораВремени();	
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьИнформациюОбУслуге(Услуга, Дата)

	Результат = Новый Структура("Длительность, Цена", 0, 0); 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ЦеныСрезПоследних.Цена, 0) КАК Цена,
		|	Услуги.Длительность КАК Длительность
		|ИЗ
		|	Справочник.Услуги КАК Услуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Цены.СрезПоследних(&Дата, Услуга = &Услуга) КАК ЦеныСрезПоследних
		|		ПО Услуги.Ссылка = ЦеныСрезПоследних.Услуга
		|ГДЕ
		|	Услуги.Ссылка = &Услуга";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Услуга", Услуга);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать(); 
		Выборка.Следующий();    
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции 

&НаСервере
Процедура ОбновитьСписокВыбораВремени();
	
	НомерДняНедели = ДеньНедели(ОбЪект.Дата);
	Если НЕ ЗначениеЗаполнено(Объект.Салон) Тогда
		Объект.Салон = Справочники.Салоны.НайтиПоНаименованию("Барбершоп", Истина);
	КонецЕсли;
	
	ДниНедели = Новый Соответствие;
	ДниНедели.Вставить(1, Перечисления.ДниНедели.Понедельник);  
	ДниНедели.Вставить(2, Перечисления.ДниНедели.Вторник);
	ДниНедели.Вставить(3, Перечисления.ДниНедели.Среда);
	ДниНедели.Вставить(4, Перечисления.ДниНедели.Четверг);
	ДниНедели.Вставить(5, Перечисления.ДниНедели.Пятница);
	ДниНедели.Вставить(6, Перечисления.ДниНедели.Суббота);
	ДниНедели.Вставить(7, Перечисления.ДниНедели.Воскресенье);
	
	ДеньНедели = ДниНедели.Получить(НомерДняНедели);
	
	Элементы.Время.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СалоныРежимРаботы.ВремяНачала КАК ВремяНачала,
		|	СалоныРежимРаботы.ВремяОкончания КАК ВремяОкончания
		|ИЗ
		|	Справочник.Салоны.РежимРаботы КАК СалоныРежимРаботы
		|ГДЕ
		|	СалоныРежимРаботы.Ссылка = &Салон
		|	И СалоныРежимРаботы.ДеньНедели = &ДеньНедели";
	
	Запрос.УстановитьПараметр("ДеньНедели", ДеньНедели);
	Запрос.УстановитьПараметр("Салон", Объект.Салон);
	
	РезультатЗапроса = Запрос.Выполнить();

	ИнтервалЗаписи = 1800; // 30 минут
	Если НЕ РезультатЗапроса.Пустой()  Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ТекВремя = Выборка.ВремяНачала;
		
		Пока ТекВремя < Выборка.ВремяОкончания Цикл
			
			ДатаВремя = НачалоДня(Объект.Дата) + (ТекВремя - '00010101');   
			Элементы.Время.СписокВыбора.Добавить(ДатаВремя, Формат(ДатаВремя,"ДФ=ЧЧ:мм")); 
			
			ТекВремя = ТекВремя + ИнтервалЗаписи;	
		
		КонецЦикла;
		
	КонецЕсли;
	

КонецПроцедуры // ()
 
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьПродажу(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала сохраните запись";
		Сообщение.Сообщить();  
		Возврат;
	КонецЕсли; 
	
	СтруктураПараметров = Новый Структура("Основание", Объект.Ссылка);
	ОткрытьФорму("Документ.Продажа.ФормаОбъекта", СтруктураПараметров,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры // ()

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);	

КонецПроцедуры // ()

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)

	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);	

КонецПроцедуры // () 

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()

	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);	

КонецПроцедуры // ()

#КонецОбласти
